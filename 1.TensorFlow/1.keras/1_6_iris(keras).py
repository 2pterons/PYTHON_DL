# -*- coding: utf-8 -*-
"""iris(keras).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18lfXqM8cXS1hz8jMBvk8sKBWFGxoj4PN
"""

import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.models import Model
from tensorflow.keras.utils import to_categorical
import numpy as np

data = load_iris()

feature = data['data']
target = to_categorical(data['target'])

x_train, x_test, y_train, y_test = train_test_split(feature, target, test_size=0.2)

x_train.shape

xInput = Input(batch_shape = (None, 4))
yOutput = Dense(3, activation='softmax')(xInput)
model = Model(xInput, yOutput)
model.compile(loss='binary_crossentropy', optimizer='adam')
model.summary()

hist = model.fit(x_train, y_train, epochs=100, validation_data = (x_test, y_test))

plt.plot(hist.history['loss'], label='train')
plt.plot(hist.history['val_loss'], label='test')
plt.legend()
plt.show()

y_pred_cat = model.predict(x_test)
y_pred = np.argmax(y_pred_cat, axis=1)
y_test = np.argmax(y_test, axis=1)

acc = (y_pred == y_test).mean()
print(acc)

